// <auto-generated />
using System;
using MVC_DynamicMenu.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MVC_DynamicMenu.Migrations
{
    [DbContext(typeof(DynamicMenuDBContext))]
    partial class DynamicMenuDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MVC_DynamicMenu.Models.ActiveLogMain", b =>
                {
                    b.Property<int>("Reference")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entry_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_Updated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Reference");

                    b.ToTable("ActiveLogMain");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.AddDocument_Skill", b =>
                {
                    b.Property<int>("DocID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alert_template")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Certificate_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Checked_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Competency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Completed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Expiry_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Preriod_befor_Expiring_reminder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Select_file")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Send_alert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Valid_for")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DocID");

                    b.ToTable("AddDocument_Skill");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.AddNewFoodAndFluid", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Additional_Food")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Breakfast")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Breakfast_Fluid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diner_Fluid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("End_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lunch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lunch_Fluid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Staf_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Start_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Toal_Calories")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cId")
                        .HasColumnType("int");

                    b.HasKey("ClientID");

                    b.ToTable("AddNewFoodAndFluid");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.AddNewLeave", b =>
                {
                    b.Property<int>("LID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("End_time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Start_time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Worker")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LID");

                    b.ToTable("AddNewLeave");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.AddNewRestrictivePraticeRecord", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Authorised_status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brief_description_of_the_practice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Circumstances_before_using_restrictive_practice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date_restrictive_practice_used")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dosage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration_minutes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Frequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hierarchy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("If_no_planeID_select_the_relevent_BSP_status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("If_other_please_specify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Incident_report_refference_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medication")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NDIS_practice_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number_of_time_used")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaneID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Related_behaviour_of_Concem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Routine_or_PRN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Signature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time_ceased")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time_commenced")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unite_of_Measurment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("What_type_of_restrictive_practice_used")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientID");

                    b.ToTable("AddNewRestrictivePraticeRecord");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.AddNewSLESProgress", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Activity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnyBarrierssIdentified")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hierarchy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("If_yes_list_barriers_identifieed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Step_taken_to_Address_beriers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfContact")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientID");

                    b.ToTable("AddNewSLESProgress");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.AddNewShiftLogAM", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Authorised_substance_use_protocol_adhered_to")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Behavior_Emotional_issues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Chore_plane_followed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Daily_planed_adheared_to")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Education_has_the_client_Attended_school_today")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Excercise_plane_followed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hierarchy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Incident_log_copleted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medication_Administrated_as_Prescribed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Menu_Diet_plane_folowed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PRN_administrered")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Personal_core_routine_Followed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Progress_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rainforcement_points_achivevede")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Staff_member_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wake_up_routine_followed")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientID");

                    b.ToTable("AddNewShiftLogAM");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.AddNewShiftLogNight", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Authorised_substance_use_protocol_adhered_to")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Behavior_Emotional_issues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Chore_plane_followed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Daily_planed_adheared_to")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Education_has_the_client_Attended_school_today")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Excercise_plane_followed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hierarchy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Incident_log_copleted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medication_Administrated_as_Prescribed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Menu_Diet_plane_folowed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PRN_administrered")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Personal_core_routine_Followed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Progress_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rainforcement_points_achivevede")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Staff_member_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wake_up_routine_followed")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientID");

                    b.ToTable("AddNewShiftLogNight");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.AddNewShiftLogPM", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Authorised_substance_use_protocol_adhered_to")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Behavior_Emotional_issues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Chore_plane_followed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Daily_planed_adheared_to")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Education_has_the_client_Attended_school_today")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Excercise_plane_followed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hierarchy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Incident_log_copleted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medication_Administrated_as_Prescribed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Menu_Diet_plane_folowed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PRN_administrered")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Personal_core_routine_Followed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Progress_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rainforcement_points_achivevede")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Staff_member_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wake_up_routine_followed")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientID");

                    b.ToTable("AddNewShiftLogPM");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.AddNewStaffMeeting", b =>
                {
                    b.Property<int>("Reference")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Actions_From_Previous_minutes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Any_WH_and_S_issues_to_reported")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apologies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Attendence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CIARS_Recording")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Chairperson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Changes_In_Behaviour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date_and_Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entry_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Good_news_stories")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Health_concerms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hierarchy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("House_mainteance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Incident_Reports")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Minute_Taker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NDIS_Goals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("New_Activities_or_experience_to_share")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Next_Meeting_Date_and_Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Next_Meeting_Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Staff_Discussion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Staff_Member_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Standing_agenda_Items")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("The_policy_reviewed_during_the_meeting_and_discussion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Training_Oppotunities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Upcomin_Appointments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("What_deos_the_coordinator_needs_to_follow_up")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("What_does_the_team_needs_to_follow_up")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Reference");

                    b.ToTable("AddNewStaffMeeting");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.AddNewSupportCoordination", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Billable_non_billable_time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FollowUp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Heirarchy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Outcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffSignature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type_of_support_coordination_activity")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientID");

                    b.ToTable("AddNewSupportCoordination");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.AddNewUnavailability", b =>
                {
                    b.Property<int>("UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("End_time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Is_all_day")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recurrance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Start_time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Worker")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UID");

                    b.ToTable("AddNewUnavailability");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.AdditionalActivityClass", b =>
                {
                    b.Property<int>("ActivityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Biller")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description_of_costs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MainBudgetAgreementMainBudgetID")
                        .HasColumnType("int");

                    b.Property<int>("MainBudgetID")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Total_Price")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActivityID");

                    b.HasIndex("MainBudgetAgreementMainBudgetID");

                    b.ToTable("AdditionalActivityClass");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.AllocateBudgetAgreement", b =>
                {
                    b.Property<int>("AllocateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Biler_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Budget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MainBudgetAgreementMainBudgetID")
                        .HasColumnType("int");

                    b.Property<int>("MainBudgetID")
                        .HasColumnType("int");

                    b.Property<string>("Remaining_budget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Select_Program")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Support_category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Support_purpose")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AllocateID");

                    b.HasIndex("MainBudgetAgreementMainBudgetID");

                    b.ToTable("AllocateBudgetAgreement");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.ApprovedTb", b =>
                {
                    b.Property<int>("Reference")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Client_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("End_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Service")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Start_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Reference");

                    b.ToTable("ApprovedTb");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.BehaviorLog", b =>
                {
                    b.Property<int>("Reference")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entry_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_Updated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Reference");

                    b.ToTable("BehaviorLog");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.CareTeams", b =>
                {
                    b.Property<int>("CareTeameID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Agency_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Group")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Referal_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Referal_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Referal_source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sub_Program")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CareTeameID");

                    b.HasIndex("PatientID");

                    b.ToTable("CareTeams");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.Case_Worker", b =>
                {
                    b.Property<int>("WorkerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DateAllocated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateDeallocated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyWorker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.HasKey("WorkerID");

                    b.HasIndex("PatientID");

                    b.ToTable("Case_Worker");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.Client", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AM_Transport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivityEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivityScheduled")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivityStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Activity_ModifyEachOrganisations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Attachments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientAttendend")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clients")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescribeOutcomes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hierarchy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuesAndFollowupRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PM_Transport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonAttending")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryPurposeOfActivity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecifyActivityPurpos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffMemberName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeTo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientID");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.Commencement_Issuse", b =>
                {
                    b.Property<int>("CommencementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Issues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.Property<string>("Program_Details_and_Support_needs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Select_Other_issues")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CommencementID");

                    b.HasIndex("PatientID");

                    b.ToTable("Commencement_Issuse");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.EmergencyFireEvacutionDrill", b =>
                {
                    b.Property<int>("Reference")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Describe_the_evacuation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entry_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location_of_fire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Participants_present_at_the_fire_drill")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Staff_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("What_worked")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Where_any_changes_made_to_how_you_evacute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Where_there_any_risks_identified")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Work_Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Reference");

                    b.ToTable("EmergencyFireEvacutionDrill");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.Files", b =>
                {
                    b.Property<int>("FilesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.HasKey("FilesID");

                    b.HasIndex("PatientID");

                    b.ToTable("File");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.FireDrill", b =>
                {
                    b.Property<int>("Reference")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Entry_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_Updated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Reference");

                    b.ToTable("FireDrill");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.FoodAndFluid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Approved_Plane")
                        .HasColumnType("int");

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<string>("Client_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pending_Plans")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FoodAndFluid");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.Fortnighttly", b =>
                {
                    b.Property<int>("Reference")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Entry_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_Updated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Reference");

                    b.ToTable("Fortnighttly");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.Housing_Register_Application", b =>
                {
                    b.Property<int>("ApplicationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Application_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Application_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date_Submited")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location_Submited")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.Property<string>("priority_catogory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("priority_type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicationID");

                    b.HasIndex("PatientID");

                    b.ToTable("Housing_Register_Application");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.IncidentLog", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientID");

                    b.ToTable("IncidentLog");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.InvoiceTb", b =>
                {
                    b.Property<int>("Reference")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cliam_number")
                        .HasColumnType("int");

                    b.Property<string>("Client_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("End_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Service")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Start_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Reference");

                    b.ToTable("InvoiceTb");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.LogSchedule", b =>
                {
                    b.Property<int>("Reference")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Activity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Activity_category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Actual_finish_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Actual_finish_time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Actual_start_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Actual_start_time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Biller_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Describe_outcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Finish_time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hirarchy_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Issues_and_followup_requried")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Persons_attending")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ratio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReferenceID")
                        .HasColumnType("int");

                    b.Property<string>("Scheduled_finish_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Scheduled_finish_time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Scheduled_start_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Scheduled_start_time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Service")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServiceSchedulesReferenceID")
                        .HasColumnType("int");

                    b.Property<string>("Service_Provider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Service_and_billing_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specific_activity_purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Staff")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Start_time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Support_Item")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit_Price")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Reference");

                    b.HasIndex("ServiceSchedulesReferenceID");

                    b.ToTable("LogSchedule");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.MainBudgetAgreement", b =>
                {
                    b.Property<int>("MainBudgetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Client_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("End_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Start_Date")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MainBudgetID");

                    b.ToTable("MainBudgetAgreement");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.Medication", b =>
                {
                    b.Property<int>("MedicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dosage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("clientId")
                        .HasColumnType("int");

                    b.Property<string>("frequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prescribed_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("route")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("timing")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MedicationId");

                    b.ToTable("Medication");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.Medication_main", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovedPlans")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PendingPlans")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Medication_main");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.Menus", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Menu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.MyProfile", b =>
                {
                    b.Property<int>("ProfileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DOB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Driver_License")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("First_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NOK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Probation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rest_Authentication")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int?>("UsersUserId")
                        .HasColumnType("int");

                    b.HasKey("ProfileID");

                    b.HasIndex("UsersUserId");

                    b.ToTable("MyProfile");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.MySupport", b =>
                {
                    b.Property<int>("SupportID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Biller_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MainBudgetAgreementMainBudgetID")
                        .HasColumnType("int");

                    b.Property<int>("MainBudgetID")
                        .HasColumnType("int");

                    b.Property<string>("Qty_week")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ratio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SVC_Booking")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelectProgaramm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Service_Provider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupportCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupportPurpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Support_Item")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Total_price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Total_units")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitOfMeasure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit_Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Week")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupportID");

                    b.HasIndex("MainBudgetAgreementMainBudgetID");

                    b.ToTable("MySupport");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.NewBehaviorLog", b =>
                {
                    b.Property<int>("BehaviorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abnormal_perceptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Active_Listening")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Alcohol_Substance_Solvent_Use")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Anger_Management")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Antisocial_Behavior")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Anxiety")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Being_Respectful")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Being_Safe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Binging_Purging_Refusal_To_Eat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Communication_Issues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Conflict_Management")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cooperation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Difference_Self_Regulating_Emotions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Difficulties_With_Refusal_To_Engage_In_Learning")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Difficulties_With_Refusal_To_Engage_independence_Skills")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Difficulties_With_Refusal_To_Maintain_Personal_Self_Carfe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Distortion_Memory_Loss")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Distress_Worring_Crying")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Effective_Communication")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fears_and_Phobias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Following_Directions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genaral_Illness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Helping_Others")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hierarchy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Impulsive_Behavior_Targeting_Property_of_Others")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Increasing_Acceptance_and_Tolerance_of_Diverse_Group")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indiscriminate_Disclosures")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Intention_Lack_of_Concentration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Listening")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Loss_Of_Interest_in_Activities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Menstruation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mimicking_Other_Behavior")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Obsersions_Or_Compulsions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Odd_and_Or_Bizarre_Behavior")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Oppositional_Defiant_Behaviour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Overactive_Behavior")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Participation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patience")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Peer_Pesistance_Skills")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Physical_Aggression")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Politenss_and_Manners")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Positive_Iteraction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Praising_others_and_Refraining_From_Nesative_Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Problems_With_Peers_Staff_Family")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recognising_Understanding_point_of_view_of_others")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remaining_of_task")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Self_Criticism")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Self_Injury_Evidence_of")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Self_Injury_Thoughts_of")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexualised_Behavior")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sharing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Signs_Of_Disclosure_Of_Hearing_Voices")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sleep_Problems_Chronic_Fatigue_Bed_Wetting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Social_Problem_Slving")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Somatising")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Staff_member_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Taking_Turns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Verbal_Aggression")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Withdrawal_From_Others")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("weight_EnterOnecAMonth")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BehaviorID");

                    b.ToTable("NewBehaviorLog");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.NewCallNote", b =>
                {
                    b.Property<int>("CallNoteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PraticipantID")
                        .HasColumnType("int");

                    b.Property<string>("Program")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type_of_Past_noteOBelow")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CallNoteID");

                    b.ToTable("NewCallNote");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.NewCaseNote", b =>
                {
                    b.Property<int>("CaseNoteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AM_staff")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Activities_the_participant_took_part_in_AfterNoon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Activities_the_participant_took_part_in_Evening")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Activities_the_participant_took_part_in_Morning")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Any_behaviour_of_Concern")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Attachement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brokerage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Did_He_She_Enjoy_activities_Afternoon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Did_He_She_Enjoy_activities_Evening")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Did_He_She_Enjoy_activities_Morning")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Did_he_she_bath_Afternoon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Did_he_she_bath_Evening")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Did_he_she_bath_Morning")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Did_he_she_brush_Teeth_Evening")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Did_he_she_brush_teeth_Afternoon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Did_he_she_brush_teeth_Morning")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Did_he_she_wash_Afternoon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Did_he_she_wash_Evening")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Did_he_she_wash_Morning")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration_time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Goals_achieved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Minutes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Night_shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Open_bowls_Afternoon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Open_bowls_Evening")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Open_bowls_Morning")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PM_Staff")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Participant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Program")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recent_case_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Referral_to")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stick_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type_of_paste_note_below")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("What_mood_the_participant_in_Afternoon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("What_mood_the_participant_in_Evining")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("What_mood_the_participant_in_Morning")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("What_the_participant_had_to_eat_Afternoon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("What_the_participant_had_to_eat_Evening")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("What_the_participant_had_to_eat_Morning")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("with")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CaseNoteID");

                    b.ToTable("NewCaseNote");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.NewFortnightlySafety", b =>
                {
                    b.Property<int>("Reference")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cylcone_kit_contents_have_been_cheked")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entry_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("First_aid_kit_contents_Ckecked")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Glass_Sprill_management_kits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("How_the_fire_extingusher_and_the_fire_blanket_been_inspected_in_the_last_6_months")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Staff")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Test_smoke_detectiors_and_identify_below")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Week_ending_date")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Reference");

                    b.ToTable("NewFortnightlySafety");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.NewIncidentLog", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Absconding_Requiring_Missing_Persons_Report")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Abuse_or_neglect_of_the_Client_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Actions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Agitation_Hyperarousal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Assault_Requiring_Medical_Support")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Attempted_Minor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Attempted_Minor_Property_Damage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Behaviour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Behaviour_or_Challenges_Attracting_Community_Concern")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Behaviour_or_Challenges_Attracting_Media_Attention")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category_of_incident")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientInjury")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client_Complaint_or_issue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Consequence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Criminal_Behaviour_Resulting_in_Police_Engagment_or_Charges")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Criminal_Behaviour_Resulting_in_client_being_held_in_Custody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Death_or_fatal_injury_of_a_client_serious_injury_of_the_client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Disclosure_Requireing_Mandatory_Reporting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Disruption_to_Routine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyAssistance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryDtae")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FollowUp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FollowUpRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Has_the_client_disclosed_or_made_accusation_of_assult_or_abuse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Has_the_client_or_guardian_been_made_aware_of_their_right_to_involve_the_police_and_potentially_press_changes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Heirarchy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("How_did_you_de_escalate_the_incident")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("How_long_did_the_physical_intervention_last")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inappropriate_or_Anti_Social_Client_Interaction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncidentDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncidentInvolvingFamily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncidentLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncidentTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncidentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Injury_Minor_Client_Injury_First_Aid_Only")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L_Client_Complaint_or_issue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L_Disruption_to_Routine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L_Has_the_client_or_guardian_been_made_aware_of_their_right_to_involve_the_police_and_potentially_press_changes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L_Inappropriate_or_Anti_Social_Client_Interaction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L_IncidentInvolvingFamily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L_Injury_Minor_Client_Injury_First_Aid_Only")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L_Non_Compliance_Refusal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureOfAll")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PRN_Approved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P_PhysicalIntervention")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonRoomSearch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonSearch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalIntervention")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PoliceInvolvement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PossibleFunction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rating_of_Incident")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reportable_conduct_by_a_carer_staff_member")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Risk_of_significant_ham_reported")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexual_misconduct_committed_against_or_in_the_presence_of_the_client_including_grooming_of_the_client_for_sexual_activity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Signature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffInjury")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffMember")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type_of_physical_intervention")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unautherized_use_of_restriced_practice_in_relation_to_the_client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unlawful_sexual_or_physical_contact_with_or_assault_of_the_client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("What_was_happening_in_the_time_Before_the_Incident")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Who_On_Call_Contacted")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientID");

                    b.ToTable("NewIncidentLog");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.NewMentalHealthReview", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Client_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client_status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entry_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hierarchy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question_3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question_4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question_5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summery")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientID");

                    b.ToTable("NewMentalHealthReview");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.NewPSA35", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Absent_from_school")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Acts_as_if_driven_by_a_motor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Acts_younger_than_children_his_or_her_age")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Blames_others_for_his_or_her_troubles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complains_of_aches_and_pains")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Daydreams_too_much")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Distracted_easily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Does_not_listen_to_rules")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Does_not_show_feelings")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Does_not_understand_feelings_of_other_people")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entry_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feels_he_or_she_is_bad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feels_hopeless")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feels_sad_unhappy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fidgety_unable_to_sit_still")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fights_with_other_children")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gets_hurt_frequently")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Has_trouble_concentrating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Has_trouble_sleeping")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Has_trouble_with_teacher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hierarchy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Is_afraid_of_new_situations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Is_down_on_him_or_herself")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Is_irritable_angry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Less_interested_in_friends")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Less_interested_in_school")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Refuses_to_share")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("School_grades_dropping")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Seems_to_be_having_less_fun")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Spends_more_time_alone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Takes_unnecessary_risks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Teases_others")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tires_easily_has_little_energy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wants_to_be_with_you_more_than_before")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Worries_a_lot")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientID");

                    b.ToTable("NewPSA35");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.NewTherapyLog", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Client_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entry_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hierarchy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mental_After_Therapy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mental_Before_Therapy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mental_Client_Concerns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mental_Duration_Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mental_Exercises")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mental_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Physical_After_Therapy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Physical_Before_Therapy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Physical_Client_Concerns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Physical_Duration_Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Physical_Exercises")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Physical_Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientID");

                    b.ToTable("NewTherapyLog");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.PSA35", b =>
                {
                    b.Property<int>("Reference")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entry_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_Updated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Reference");

                    b.ToTable("PSA35");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.Patient", b =>
                {
                    b.Property<int>("PatientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Emergency_Contact_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Emergency_Contact_No")
                        .HasColumnType("int");

                    b.Property<string>("Full_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Participant_City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supervisor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telephone")
                        .HasColumnType("int");

                    b.HasKey("PatientID");

                    b.ToTable("Patient");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.Patient_Contact", b =>
                {
                    b.Property<int>("ContactID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Can_text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Disclose_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Line1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Line2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LivingWith")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<string>("Relationship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Security")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Start_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emargencyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("emargencyPhone")
                        .HasColumnType("int");

                    b.HasKey("ContactID");

                    b.HasIndex("PatientID");

                    b.ToTable("Patient_Contact");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.Patient_Helth", b =>
                {
                    b.Property<int>("PatientHelthID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acquried_brain_injury")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Acquried_brain_injury_comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Allergies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Allergies_comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cardiovscular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cardiovscular_comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Chronic_pain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Chronic_pain_comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diabetes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diabetes_comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dissabilities_none")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dissabilities_none_Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Down_Syndrome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Down_Syndrome_comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Epilepsy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Epilepsy_comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Exp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hearing_inmpairment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hearing_inmpairment_comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Infectious_Disease")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Infectious_Disease_comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Interlrctual_disability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Interlrctual_disability_comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medical_none")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medical_none_Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medicare_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Obesity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Obesity_comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Other")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Other_Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.Property<string>("Physical_disability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Physical_disability_comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Repiratory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Repiratory_comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skin_condition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skin_condition_comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suffix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suspected_ABI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suspected_ABI_comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unknown")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unknown_comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vission_impa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vission_impap_comment")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientHelthID");

                    b.HasIndex("PatientID");

                    b.ToTable("Patient_Helth");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.Patient_Info", b =>
                {
                    b.Property<int>("Patient_InfoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("COB_Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CeterLink_Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Effective_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncomeComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indegenous_status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Interpreted_needed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language_spoken_at_home")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NDIS_Number")
                        .HasColumnType("int");

                    b.Property<string>("Office")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Other_Cultural_Issues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.Property<string>("Primary_income_source")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Patient_InfoID");

                    b.HasIndex("PatientID");

                    b.ToTable("Patient_Info");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.PaymentRequest", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Biller_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Created_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("External_Reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Line_Item_Qty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Total")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentID");

                    b.ToTable("PaymentRequest");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.Programs", b =>
                {
                    b.Property<int>("ProgramID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Commenced")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfExit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.Property<string>("Pause")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Program")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Setting")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProgramID");

                    b.HasIndex("PatientID");

                    b.ToTable("Programs");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.RestrictivePracticeRecord", b =>
                {
                    b.Property<int>("Reference")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Reference");

                    b.ToTable("RestrictivePracticeRecord");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.RoleMenus", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Menu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuId");

                    b.ToTable("RoleMenus");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.RoleOptions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Add")
                        .HasColumnType("int");

                    b.Property<int>("Approve")
                        .HasColumnType("int");

                    b.Property<int>("Delete")
                        .HasColumnType("int");

                    b.Property<int>("Edit")
                        .HasColumnType("int");

                    b.Property<int>("EditFolder")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("RoleMenuId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleMenusMenuId")
                        .HasColumnType("int");

                    b.Property<int?>("RolesRoleId")
                        .HasColumnType("int");

                    b.Property<int>("View")
                        .HasColumnType("int");

                    b.Property<int>("addFolder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleMenusMenuId");

                    b.HasIndex("RolesRoleId");

                    b.ToTable("RoleOptions");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.Roles", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.RosterViewModel", b =>
                {
                    b.Property<int>("TaskID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StaffID")
                        .HasColumnType("int");

                    b.Property<string>("StaffName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaskID");

                    b.ToTable("Roster");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.SLESProgress", b =>
                {
                    b.Property<int>("Reference")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Reference");

                    b.ToTable("SLESProgress");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.ServiceSchedules", b =>
                {
                    b.Property<int>("ReferenceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Client_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Day_of_week")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("End_date_and_time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hierarchy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MainBudgetAgreementMainBudgetID")
                        .HasColumnType("int");

                    b.Property<int>("MainBudgetID")
                        .HasColumnType("int");

                    b.Property<string>("Service")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Staff")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Start_date_and_time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReferenceID");

                    b.HasIndex("MainBudgetAgreementMainBudgetID");

                    b.ToTable("ServiceSchedules");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.ShiftLogAM", b =>
                {
                    b.Property<int>("Reference")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Reference");

                    b.ToTable("ShiftLogAM");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.ShiftLogNight", b =>
                {
                    b.Property<int>("Reference")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Reference");

                    b.ToTable("ShiftLogNight");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.ShiftLogPM", b =>
                {
                    b.Property<int>("Reference")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Reference");

                    b.ToTable("ShiftLogPM");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.StaffMeeting", b =>
                {
                    b.Property<int>("Reference")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Entry_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_Updated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Staff")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Reference");

                    b.ToTable("StaffMeeting");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.Summerising", b =>
                {
                    b.Property<int>("SummerisingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Complaints_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complaints_Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complaints_dateExplained")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Connection_to_family_and_Significant_people_MinimalImprovement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Connection_to_family_and_Significant_people_ModerateImprovement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Connection_to_family_and_Significant_people_NoChange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Connection_to_family_and_Significant_people_SubstantialImprovement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Connection_to_family_and_Significant_people_Sufficient_at_Commencement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Connection_to_family_and_Significant_people_View_of_self_Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Connection_to_family_and_Significant_people_Worse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date_of_exit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExitInterviewConsent_Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExitInterviewConsent_ConsentAtExite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExitInterviewConsent_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Goals_Achived_at_exit_Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Goals_Achived_at_exit_Selection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InformationSharingWithThirdParties_ConsentToShareInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InformationSharingWithThirdParties_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InformationSharingWithThirdParties_informationSharingWithThirdParties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicalConsent_Consent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicalConsent_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicalConsent_MedicalConsent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Participants_level_of_Engagement_In_this_Program_Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Participants_level_of_Engagement_In_this_Program_sellection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.Property<string>("Primary_model_of_service_while_Involved_with_program_Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Primary_model_of_service_while_Involved_with_program_selection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrivacyAndConsent_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrivacyAndConsent_Date_Signed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrivacyAndConsent_Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason_of_exit_Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason_of_exit_Selection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RightAndResponsibilities_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RightAndResponsibilities_DateExplained")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RightAndResponsibilities_Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Test_question_Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Test_question_MinimalImprovement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Test_question_ModerateImprovement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Test_question_NoChange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Test_question_SubstantialImprovement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Test_question_Sufficient_at_Commencement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Test_question_Worse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("View_of_future_Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("View_of_future_MinimalImprovement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("View_of_future_ModerateImprovement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("View_of_future_NoChange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("View_of_future_SubstantialImprovement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("View_of_future_Sufficient_at_Commencement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("View_of_future_Worse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("View_of_self_Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("View_of_self_MinimalImprovement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("View_of_self_ModerateImprovement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("View_of_self_NoChange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("View_of_self_SubstantialImprovement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("View_of_self_Sufficient_at_Commencement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("View_of_self_Worse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ourWayOfWorkingOutComes_DateCompleted")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SummerisingID");

                    b.HasIndex("PatientID");

                    b.ToTable("Summerising");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.SupporCoordination", b =>
                {
                    b.Property<int>("Reference")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Reference");

                    b.ToTable("SupporCoordination");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.TherapyLog", b =>
                {
                    b.Property<int>("Reference")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entry_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_Updated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Reference");

                    b.ToTable("TherapyLog");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("RolesRoleId")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("RolesRoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.AdditionalActivityClass", b =>
                {
                    b.HasOne("MVC_DynamicMenu.Models.MainBudgetAgreement", "MainBudgetAgreement")
                        .WithMany("AdditionalActivityClass")
                        .HasForeignKey("MainBudgetAgreementMainBudgetID");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.AllocateBudgetAgreement", b =>
                {
                    b.HasOne("MVC_DynamicMenu.Models.MainBudgetAgreement", "MainBudgetAgreement")
                        .WithMany("AllocateBudgetAgreement")
                        .HasForeignKey("MainBudgetAgreementMainBudgetID");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.CareTeams", b =>
                {
                    b.HasOne("MVC_DynamicMenu.Models.Patient", "Patient")
                        .WithMany("CareTeams")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.Case_Worker", b =>
                {
                    b.HasOne("MVC_DynamicMenu.Models.Patient", "Patient")
                        .WithMany("Case_Worker")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.Commencement_Issuse", b =>
                {
                    b.HasOne("MVC_DynamicMenu.Models.Patient", "Patient")
                        .WithMany("Commencement_Issuse")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.Files", b =>
                {
                    b.HasOne("MVC_DynamicMenu.Models.Patient", "Patient")
                        .WithMany("Files")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.Housing_Register_Application", b =>
                {
                    b.HasOne("MVC_DynamicMenu.Models.Patient", "Patient")
                        .WithMany("Housing_Register_Application")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.LogSchedule", b =>
                {
                    b.HasOne("MVC_DynamicMenu.Models.ServiceSchedules", "ServiceSchedules")
                        .WithMany("LogSchedule")
                        .HasForeignKey("ServiceSchedulesReferenceID");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.MyProfile", b =>
                {
                    b.HasOne("MVC_DynamicMenu.Models.Users", "Users")
                        .WithMany("MyProfile")
                        .HasForeignKey("UsersUserId");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.MySupport", b =>
                {
                    b.HasOne("MVC_DynamicMenu.Models.MainBudgetAgreement", "MainBudgetAgreement")
                        .WithMany("MySupport")
                        .HasForeignKey("MainBudgetAgreementMainBudgetID");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.Patient_Contact", b =>
                {
                    b.HasOne("MVC_DynamicMenu.Models.Patient", "Patient")
                        .WithMany("patient_Contacts")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.Patient_Helth", b =>
                {
                    b.HasOne("MVC_DynamicMenu.Models.Patient", "Patient")
                        .WithMany("patient_Helths")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.Patient_Info", b =>
                {
                    b.HasOne("MVC_DynamicMenu.Models.Patient", "Patient")
                        .WithMany("Patient_Info")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.Programs", b =>
                {
                    b.HasOne("MVC_DynamicMenu.Models.Patient", "Patient")
                        .WithMany("programs")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.RoleOptions", b =>
                {
                    b.HasOne("MVC_DynamicMenu.Models.RoleMenus", "RoleMenus")
                        .WithMany("roleOptions")
                        .HasForeignKey("RoleMenusMenuId");

                    b.HasOne("MVC_DynamicMenu.Models.Roles", "Roles")
                        .WithMany("roleOptions")
                        .HasForeignKey("RolesRoleId");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.ServiceSchedules", b =>
                {
                    b.HasOne("MVC_DynamicMenu.Models.MainBudgetAgreement", "MainBudgetAgreement")
                        .WithMany("ServiceSchedules")
                        .HasForeignKey("MainBudgetAgreementMainBudgetID");
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.Summerising", b =>
                {
                    b.HasOne("MVC_DynamicMenu.Models.Patient", "Patient")
                        .WithMany("summerisings")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MVC_DynamicMenu.Models.Users", b =>
                {
                    b.HasOne("MVC_DynamicMenu.Models.Roles", "Roles")
                        .WithMany("users")
                        .HasForeignKey("RolesRoleId");
                });
#pragma warning restore 612, 618
        }
    }
}
